{
	"info": {
		"_postman_id": "2f70cd2d-177a-4b49-84ed-b8f45d8b92f5",
		"name": "WeatherServerFunctions",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register_fails_userAlreadyExists",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3c02a464-58a7-44b4-813d-61a8be90aed1",
						"exec": [
							"pm.test(\"UnSuccessful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400,401]);",
							"});",
							"",
							"pm.test(\"success is false\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(false);",
							"});",
							"",
							"pm.test(\"error message, user already exists\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"UserName already exists, try logging in.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"userName\" : \"Jesper Theilgaard\",\n\t\"password\" : \"haderRegn999\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/account/register",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"account",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07c09b41-b66a-4511-a78d-7e59afe238f3",
						"exec": [
							"",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"userName\" : \"Allan_Bobby_Helvetica_Von_Gungadin_Junior_69\",\n\t\"password\" : \"securityIsPassion==true\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/account/register",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"account",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "188160df-9161-4293-80ad-618113ff447a",
						"exec": [
							"",
							"    var jsonData = pm.response.json();",
							"    pm.globals.set(\"jwt_token\", jsonData.jwt);",
							"    console.log(pm.globals.get(\"jwt_token\"));",
							"",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,200]);",
							"});",
							"",
							"pm.test(\"has jwt\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.hasOwnProperty=='jwt');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"userName\" : \"Jesper Theilgaard\",\n\t\"password\" : \"mitPassword2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/account/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"account",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login_fails_WrongUserName",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c58336f9-f65b-4ed7-94c5-395b5f869b3e",
						"exec": [
							"",
							"",
							"",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"error message, username does not exist.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Username doesn't exist. Please register an account.\");",
							"});",
							"",
							"pm.test(\"success is false\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"userName\" : \"Remee\",\n\t\"password\" : \"mitPassword2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/account/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"account",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login_fails_wrongPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "834ca309-5b9e-49cb-a045-81554085f8d4",
						"exec": [
							"",
							"",
							"",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"error message, wrong password.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Wrong password\");",
							"});",
							"",
							"pm.test(\"success is false\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"userName\" : \"Jesper Theilgaard\",\n\t\"password\" : \"elskerHeste123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/account/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"account",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateWeatherObservation",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d82ab71e-9543-4c37-92fd-532b16e1bfb6",
						"exec": [
							"console.log(pm.globals.get(\"jwt_token\"));",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0084a451-bb65-4ea0-a626-df7723c4afd1",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n        {\n        \t\"Date\" : \"2020-03-20T12:40:00\",\n        \t\"Name\" : \"Lalandia\",\n        \t\"Latitude\" : 12.0234,\n        \t\"Longitude\" : 22.4343,\n        \t\"TemperatureCelsius\" : 40,\n        \t\"Humidity_Percentage\" : 70,\n        \t\"Pressure_Millibar\" : 40\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/weatherobservation",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"weatherobservation"
					]
				}
			},
			"response": []
		},
		{
			"name": "UnsuccessfulCreateWeatherObserVation_NoAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "874682b2-9c86-4824-8071-3f443831584d",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\n        {\n        \t\"Date\" : \"2020-03-20T12:40:00\",\n        \t\"Name\" : \"Lalandia\",\n        \t\"Latitude\" : 12.0234,\n        \t\"Longitude\" : 22.4343,\n        \t\"TemperatureCelsius\" : 40,\n        \t\"Humidity_Percentage\" : 70,\n        \t\"Pressure_Millibar\" : 1050\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/weatherobservation",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"weatherobservation"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetLastThreeWeatherObservations",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4e8cf99f-d3cd-43a9-9ca4-209b724b046b",
						"exec": [
							"pm.test(\"Length is 3 :^)\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/api/weatherobservation",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"weatherobservation"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetWeatherObservationsOfSpecifiedDay",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f673268b-ecfe-4cb7-837b-0cee71af2dfd",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/api/weatherobservation/2020-11-15",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"weatherobservation",
						"2020-11-15"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetWeatherObservationsOfInterval_ReturnsAllSeedData",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d6c578c8-aebd-4e6c-a7e6-606783d68abe",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/api/weatherobservation/2020-01-02/2020-11-20",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"weatherobservation",
						"2020-01-02",
						"2020-11-20"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetWeatherObservationsOfInterval_ReturnsFourSeededObservations",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a1367f5-9240-40b6-b278-3388a2ad781d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/api/weatherobservation/2020-05-20/2020-11-16",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"weatherobservation",
						"2020-05-20",
						"2020-11-16"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "7d6f4b75-7ab1-44fb-b6d6-9991a812dedf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "fda42d29-41f6-4db0-822a-f6305e66156c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "bf2e489f-5402-49ee-b2b6-917de4d45b72",
			"key": "jwt_token",
			"value": null,
			"type": "any",
			"disabled": true
		}
	],
	"protocolProfileBehavior": {}
}